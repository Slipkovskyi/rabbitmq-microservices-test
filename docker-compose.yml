version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=5672
    networks:
      - microservices-net
    restart: unless-stopped

  user-service:
    build: ./user-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=5672
    networks:
      - microservices-net
    restart: unless-stopped

  post-service:
    build: ./post-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=5672
    networks:
      - microservices-net
    restart: unless-stopped

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - microservices-net
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  rabbitmq_data: